// Keep in sync with ..\CoreClr\src\Microsoft.ServiceHub.Client\ExitCode.cs
"use strict";
/**
 * Exit code from a Node ServiceHub process.
 * Range 1-19 and 128+ is used by Node itself.
 * Range 20 - 127 is used by ServiceHub.
 * Non-node ServiceHub hosts are supposed to use the same ServiceHub exit codes in ServiceHub range 20-127.
 * */
var ExitCode;
(function (ExitCode) {
    /** Successful termination, no error */
    ExitCode[ExitCode["Success"] = 0] = "Success";
    // Node error codes
    /** There was an uncaught exception, and it was not handled by a domain or an 'uncaughtException' event handler. */
    ExitCode[ExitCode["NodeUncaughtFatalException"] = 1] = "NodeUncaughtFatalException";
    /** The JavaScript source code internal in Node.js's bootstrapping process caused a parse error.
     * This is extremely rare, and generally can only happen during development of Node.js itself. */
    ExitCode[ExitCode["NodeInternalJavaScriptParseError"] = 3] = "NodeInternalJavaScriptParseError";
    /** The JavaScript source code internal in Node.js's bootstrapping process failed to return a function value when evaluated.
     * This is extremely rare, and generally can only happen during development of Node.js itself. */
    ExitCode[ExitCode["NodeInternalJavaScriptEvaluationFailure"] = 4] = "NodeInternalJavaScriptEvaluationFailure";
    /** There was a fatal unrecoverable error in V8. Typically a message will be printed to stderr with the prefix FATAL ERROR */
    ExitCode[ExitCode["NodeFatalError"] = 5] = "NodeFatalError";
    /** There was an uncaught exception, but the internal fatal exception handler function was somehow set to a non-function, and could not be called. */
    ExitCode[ExitCode["NodeNonFunctionInternalExceptionHandler"] = 6] = "NodeNonFunctionInternalExceptionHandler";
    /** There was an uncaught exception, and the internal fatal exception handler function itself threw an error while attempting to handle it.
     * This can happen, for example, if a process.on('uncaughtException') or domain.on('error') handler throws an error. */
    ExitCode[ExitCode["NodeInternalExceptionHandlerRunTimeFailure"] = 7] = "NodeInternalExceptionHandlerRunTimeFailure";
    /** Either an unknown option was specified, or an option requiring a value was provided without a value. */
    ExitCode[ExitCode["NodeInvalidArgument"] = 9] = "NodeInvalidArgument";
    /** The JavaScript source code internal in Node.js's bootstrapping process threw an error when the bootstrapping function was called.
     * This is extremely rare, and generally can only happen during development of Node.js itself. */
    ExitCode[ExitCode["NodeInternalJavaScriptRunTimeFailure"] = 10] = "NodeInternalJavaScriptRunTimeFailure";
    /** The --debug and/or --debug-brk options were set, but an invalid port number was chosen. */
    ExitCode[ExitCode["NodeInvalidDebugArgument"] = 12] = "NodeInvalidDebugArgument";
    // ServiceHub exit codes
    // -------------------------------------------------------------------------------------------------------
    /** Invalid command line argument for servicehub process */
    ExitCode[ExitCode["InvalidArgument"] = 20] = "InvalidArgument";
    /** Cannot start a new pipe server because the supplied pipe address is already in use.
     * This may happen when starting a controller where there is already a controller running */
    ExitCode[ExitCode["ErrorStartingServerPipeInUse"] = 21] = "ErrorStartingServerPipeInUse";
    /** Cannot start a new pipe server due to some error */
    ExitCode[ExitCode["ErrorStartingServer"] = 22] = "ErrorStartingServer";
    /** Uncaught exception */
    ExitCode[ExitCode["UncaughtException"] = 23] = "UncaughtException";
    /** Error shutting down */
    ExitCode[ExitCode["ShutdownError"] = 24] = "ShutdownError";
    /** Configuration error in servicehub.config.json */
    ExitCode[ExitCode["ConfigurationError"] = 25] = "ConfigurationError";
    // Signals
    // -------------------------------------------------------------------------------------------------------
    /** Node process was terminated by SIGHUP signal (when the console window is closed)*/
    ExitCode[ExitCode["SigHup"] = 129] = "SigHup";
    /** Node process was terminated by SIGINT signal (by pressing Ctrl-C in the console) */
    ExitCode[ExitCode["SigInt"] = 130] = "SigInt";
    /** Node process was terminated by SIGKILL signal */
    ExitCode[ExitCode["SigKill"] = 137] = "SigKill";
    /** Node  process was terminated by SIGTERM signal */
    ExitCode[ExitCode["SigTerm"] = 143] = "SigTerm";
    /** Node  process was terminated by SIGBREAK signal (by pressing Ctrl-Break in the console) */
    ExitCode[ExitCode["SigBreak"] = 149] = "SigBreak";
})(ExitCode || (ExitCode = {}));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ExitCode;

//# sourceMappingURL=exitCode.js.map
// SIG // Begin signature block
// SIG // MIIhugYJKoZIhvcNAQcCoIIhqzCCIacCAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // AmD1rUB96h6KZxO5x23uWQYH9jyt44cHClyme0VYtGSg
// SIG // ggtWMIIE3jCCA8agAwIBAgITMwAAAcy1W0IXB2ATEQAA
// SIG // AAABzDANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDEwMB4XDTE3MDkxMjE4MDcwNloX
// SIG // DTE4MDkxMjE4MDcwNlowdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // qZB1moyDMhvorMTex1h+UmWZ52gS7QV0SxKYiTA2P3Ep
// SIG // m3JVmRehPh979B7y6IQgC1C1jrZvtxI21cmxI2KOfkIu
// SIG // 6QywYHZohyxI1JMbfDeVZVCHaafQKW+IZeKZwjAMl2Cw
// SIG // GqeLCmRY3bNRsq5x9ldPKLQX5dZgsCuGeSgrWfQbvlw5
// SIG // 9LTN/Ds5kGkZf2dMSzu6n1lVGgY/7KT75ZCq/p7p4Eru
// SIG // STIPMUnCks35BzTHKwAwEP0QyhnsJGPq3a2Kk/XGmgiU
// SIG // Is9Co0CnbcwsXdXxQceTdcovfituYLlo8qowRTX575Lh
// SIG // dSSJQFyepgmTN94YvAm0bUWaQsK5czBxiwIDAQABo4IB
// SIG // XTCCAVkwHwYDVR0lBBgwFgYKKwYBBAGCNz0GAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFFlVxIKPLL3blp451S/Ro/0y
// SIG // ArJ/MDQGA1UdEQQtMCukKTAnMQ0wCwYDVQQLEwRNT1BS
// SIG // MRYwFAYDVQQFEw0yMzA4NjUrMjQyNDA2MB8GA1UdIwQY
// SIG // MBaAFOb8X3u7IgBY5HJOtfQhdCMy5u+sMFYGA1UdHwRP
// SIG // ME0wS6BJoEeGRWh0dHA6Ly9jcmwubWljcm9zb2Z0LmNv
// SIG // bS9wa2kvY3JsL3Byb2R1Y3RzL01pY0NvZFNpZ1BDQV8y
// SIG // MDEwLTA3LTA2LmNybDBaBggrBgEFBQcBAQROMEwwSgYI
// SIG // KwYBBQUHMAKGPmh0dHA6Ly93d3cubWljcm9zb2Z0LmNv
// SIG // bS9wa2kvY2VydHMvTWljQ29kU2lnUENBXzIwMTAtMDct
// SIG // MDYuY3J0MAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQEL
// SIG // BQADggEBANGT7iex7letmRmMI2tjEMw591UYclg78am3
// SIG // zuDKljBRU8yY8BJTGCvoGpikCbUB0SNGoXj3/2XOTlse
// SIG // YC5zfrAJekrn1313An/RxRGJsD8y7Ya38xAJ244R01Yd
// SIG // 9IVXAin+6rhRv0PufFSfH7mdyeAMDE4Y0Dj3j6pw8Cob
// SIG // tPMrYXtwihbvO/faO/afni6lv4RlCSU5sdIgCdq42Q/k
// SIG // J31KgwF17IJ30LmgQyumPqUe9UsDdCWIo2BiJc2NOvaR
// SIG // ChsDvWdCyaOrmpP9elruUdb5hm5M5wBYLEPT+kTIAx6f
// SIG // 78TM4c2wyev6XQjaR4FXESduccHGT35ECK8c7quVDqMw
// SIG // ggZwMIIEWKADAgECAgphDFJMAAAAAAADMA0GCSqGSIb3
// SIG // DQEBCwUAMIGIMQswCQYDVQQGEwJVUzETMBEGA1UECBMK
// SIG // V2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwG
// SIG // A1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTIwMAYD
// SIG // VQQDEylNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBB
// SIG // dXRob3JpdHkgMjAxMDAeFw0xMDA3MDYyMDQwMTdaFw0y
// SIG // NTA3MDYyMDUwMTdaMH4xCzAJBgNVBAYTAlVTMRMwEQYD
// SIG // VQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25k
// SIG // MR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24x
// SIG // KDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNpZ25pbmcg
// SIG // UENBIDIwMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
// SIG // ggEKAoIBAQDpDmRQeWe1xOP9CQBMnpSs91Zo6kTYz8VY
// SIG // T6mldnxtRbrTOZK0pB75+WWC5BfSj/1EnAjoZZPOLFWE
// SIG // v30I4y4rqEErGLeiS25JTGsVB97R0sKJHnGUzbV/S7Sv
// SIG // CNjMiNZrF5Q6k84mP+zm/jSYV9UdXUn2siou1YW7WT/4
// SIG // kLQrg3TKK7M7RuPwRknBF2ZUyRy9HcRVYldy+Ge5JSA0
// SIG // 3l2mpZVeqyiAzdWynuUDtWPTshTIwciKJgpZfwfs/w7t
// SIG // gBI1TBKmvlJb9aba4IsLSHfWhUfVELnG6Krui2otBVxg
// SIG // xrQqW5wjHF9F4xoUHm83yxkzgGqJTaNqZmN4k9Uwz5Uf
// SIG // AgMBAAGjggHjMIIB3zAQBgkrBgEEAYI3FQEEAwIBADAd
// SIG // BgNVHQ4EFgQU5vxfe7siAFjkck619CF0IzLm76wwGQYJ
// SIG // KwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYDVR0PBAQD
// SIG // AgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAU
// SIG // 1fZWy4/oolxiaNE9lJBb186aGMQwVgYDVR0fBE8wTTBL
// SIG // oEmgR4ZFaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3Br
// SIG // aS9jcmwvcHJvZHVjdHMvTWljUm9vQ2VyQXV0XzIwMTAt
// SIG // MDYtMjMuY3JsMFoGCCsGAQUFBwEBBE4wTDBKBggrBgEF
// SIG // BQcwAoY+aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3Br
// SIG // aS9jZXJ0cy9NaWNSb29DZXJBdXRfMjAxMC0wNi0yMy5j
// SIG // cnQwgZ0GA1UdIASBlTCBkjCBjwYJKwYBBAGCNy4DMIGB
// SIG // MD0GCCsGAQUFBwIBFjFodHRwOi8vd3d3Lm1pY3Jvc29m
// SIG // dC5jb20vUEtJL2RvY3MvQ1BTL2RlZmF1bHQuaHRtMEAG
// SIG // CCsGAQUFBwICMDQeMiAdAEwAZQBnAGEAbABfAFAAbwBs
// SIG // AGkAYwB5AF8AUwB0AGEAdABlAG0AZQBuAHQALiAdMA0G
// SIG // CSqGSIb3DQEBCwUAA4ICAQAadO9XTyl7xBaFeLhQ0yL8
// SIG // CZ2sgpf4NP8qLJeVEuXkv8+/k8jjNKnbgbjcHgC+0jVv
// SIG // r+V/eZV35QLU8evYzU4eG2GiwlojGvCMqGJRRWcI4z88
// SIG // HpP4MIUXyDlAptcOsyEp5aWhaYwik8x0mOehR0PyU6zA
// SIG // DzBpf/7SJSBtb2HT3wfV2XIALGmGdj1R26Y5SMk3YW0H
// SIG // 3VMZy6fWYcK/4oOrD+Brm5XWfShRsIlKUaSabMi3H0oa
// SIG // Dmmp19zBftFJcKq2rbtyR2MX+qbWoqaG7KgQRJtjtrJp
// SIG // iQbHRoZ6GD/oxR0h1Xv5AiMtxUHLvx1MyBbvsZx//CJL
// SIG // SYpuFeOmf3Zb0VN5kYWd1dLbPXM18zyuVLJSR2rAqhOV
// SIG // 0o4R2plnXjKM+zeF0dx1hZyHxlpXhcK/3Q2PjJst67Tu
// SIG // zyfTtV5p+qQWBAGnJGdzz01Ptt4FVpd69+lSTfR3BU+F
// SIG // xtgL8Y7tQgnRDXbjI1Z4IiY2vsqxjG6qHeSF2kczYo+k
// SIG // yZEzX3EeQK+YZcki6EIhJYocLWDZN4lBiSoWD9dhPJRo
// SIG // YFLv1keZoIBA7hWBdz6c4FMYGlAdOJWbHmYzEyc5F3iH
// SIG // Ns5Ow1+y9T1HU7bg5dsLYT0q15IszjdaPkBCMaQfEAjC
// SIG // Vpy/JF1RAp1qedIX09rBlI4HeyVxRKsGaubUxt8jmpZ1
// SIG // xTGCFbwwghW4AgEBMIGVMH4xCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xKDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNpZ25p
// SIG // bmcgUENBIDIwMTACEzMAAAHMtVtCFwdgExEAAAAAAcww
// SIG // DQYJYIZIAWUDBAIBBQCgga4wGQYJKoZIhvcNAQkDMQwG
// SIG // CisGAQQBgjcCAQQwHAYKKwYBBAGCNwIBCzEOMAwGCisG
// SIG // AQQBgjcCARUwLwYJKoZIhvcNAQkEMSIEIHa8MiuY4av5
// SIG // 9FGTl7vOD+M7YZW4wIjmomknRLacJnoHMEIGCisGAQQB
// SIG // gjcCAQwxNDAyoBiAFgBlAHgAaQB0AEMAbwBkAGUALgBq
// SIG // AHOhFoAUaHR0cDovL21pY3Jvc29mdC5jb20wDQYJKoZI
// SIG // hvcNAQEBBQAEggEAX44sEHTm6ru1bsv/nktKdGPq6Qhs
// SIG // VXlRaKgXrkHpevmrB+AfWBfYMxhwS87xaVDxZ6eplllD
// SIG // mg+q8ECZPo3YH95ZCTVtmLA35SdfDc+tjA2TEzpamqF9
// SIG // 46JGWA6gLaOybwqVWpYb8VC6oLqtzTqePZ7NrB3rzswS
// SIG // KA9yrZsym+g18JgwP8f+oBgVtH11nSNyEKKZq57Qp1np
// SIG // +oiGbN0WNjE9X4rMQaVFq8Vk+tCDLVvrCjG+15uLgnMM
// SIG // wxB12LhjhuuGP1V6gqrnjSARNQUxTLvoZt1a8+DNyGrM
// SIG // 66h6qpYZ19qrjiPWwiRTDV18A/KuF821xbT6bd9YrFft
// SIG // 0Uoc8aGCE0YwghNCBgorBgEEAYI3AwMBMYITMjCCEy4G
// SIG // CSqGSIb3DQEHAqCCEx8wghMbAgEDMQ8wDQYJYIZIAWUD
// SIG // BAIBBQAwggE8BgsqhkiG9w0BCRABBKCCASsEggEnMIIB
// SIG // IwIBAQYKKwYBBAGEWQoDATAxMA0GCWCGSAFlAwQCAQUA
// SIG // BCAZGwYdZZVo/pYGv/Rn06ZmWHLTKwYNMY+IVgLscHSe
// SIG // UgIGWnt7xcnDGBMyMDE4MDIxMzA1MTIzMS43OTNaMAcC
// SIG // AQGAAgH0oIG4pIG1MIGyMQswCQYDVQQGEwJVUzETMBEG
// SIG // A1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9u
// SIG // ZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MQwwCgYDVQQLEwNBT0MxJzAlBgNVBAsTHm5DaXBoZXIg
// SIG // RFNFIEVTTjpEMjM2LTM3REEtOTc2MTElMCMGA1UEAxMc
// SIG // TWljcm9zb2Z0IFRpbWUtU3RhbXAgU2VydmljZaCCDsow
// SIG // ggZxMIIEWaADAgECAgphCYEqAAAAAAACMA0GCSqGSIb3
// SIG // DQEBCwUAMIGIMQswCQYDVQQGEwJVUzETMBEGA1UECBMK
// SIG // V2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwG
// SIG // A1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTIwMAYD
// SIG // VQQDEylNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBB
// SIG // dXRob3JpdHkgMjAxMDAeFw0xMDA3MDEyMTM2NTVaFw0y
// SIG // NTA3MDEyMTQ2NTVaMHwxCzAJBgNVBAYTAlVTMRMwEQYD
// SIG // VQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25k
// SIG // MR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24x
// SIG // JjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBD
// SIG // QSAyMDEwMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
// SIG // CgKCAQEAqR0NvHcRijog7PwTl/X6f2mUa3RUENWlCgCC
// SIG // hfvtfGhLLF/Fw+Vhwna3PmYrW/AVUycEMR9BGxqVHc4J
// SIG // E458YTBZsTBED/FgiIRUQwzXTbg4CLNC3ZOs1nMwVyaC
// SIG // o0UN0Or1R4HNvyRgMlhgRvJYR4YyhB50YWeRX4FUsc+T
// SIG // TJLBxKZd0WETbijGGvmGgLvfYfxGwScdJGcSchohiq9L
// SIG // ZIlQYrFd/XcfPfBXday9ikJNQFHRD5wGPmd/9WbAA5ZE
// SIG // fu/QS/1u5ZrKsajyeioKMfDaTgaRtogINeh4HLDpmc08
// SIG // 5y9Euqf03GS9pAHBIAmTeM38vMDJRF1eFpwBBU8iTQID
// SIG // AQABo4IB5jCCAeIwEAYJKwYBBAGCNxUBBAMCAQAwHQYD
// SIG // VR0OBBYEFNVjOlyKMZDzQ3t8RhvFM2hahW1VMBkGCSsG
// SIG // AQQBgjcUAgQMHgoAUwB1AGIAQwBBMAsGA1UdDwQEAwIB
// SIG // hjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNX2
// SIG // VsuP6KJcYmjRPZSQW9fOmhjEMFYGA1UdHwRPME0wS6BJ
// SIG // oEeGRWh0dHA6Ly9jcmwubWljcm9zb2Z0LmNvbS9wa2kv
// SIG // Y3JsL3Byb2R1Y3RzL01pY1Jvb0NlckF1dF8yMDEwLTA2
// SIG // LTIzLmNybDBaBggrBgEFBQcBAQROMEwwSgYIKwYBBQUH
// SIG // MAKGPmh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kv
// SIG // Y2VydHMvTWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3J0
// SIG // MIGgBgNVHSABAf8EgZUwgZIwgY8GCSsGAQQBgjcuAzCB
// SIG // gTA9BggrBgEFBQcCARYxaHR0cDovL3d3dy5taWNyb3Nv
// SIG // ZnQuY29tL1BLSS9kb2NzL0NQUy9kZWZhdWx0Lmh0bTBA
// SIG // BggrBgEFBQcCAjA0HjIgHQBMAGUAZwBhAGwAXwBQAG8A
// SIG // bABpAGMAeQBfAFMAdABhAHQAZQBtAGUAbgB0AC4gHTAN
// SIG // BgkqhkiG9w0BAQsFAAOCAgEAB+aIUQ3ixuCYP4FxAz2d
// SIG // o6Ehb7Prpsz1Mb7PBeKp/vpXbRkws8LFZslq3/Xn8Hi9
// SIG // x6ieJeP5vO1rVFcIK1GCRBL7uVOMzPRgEop2zEBAQZvc
// SIG // XBf/XPleFzWYJFZLdO9CEMivv3/Gf/I3fVo/HPKZeUqR
// SIG // UgCvOA8X9S95gWXZqbVr5MfO9sp6AG9LMEQkIjzP7QOl
// SIG // lo9ZKby2/QThcJ8ySif9Va8v/rbljjO7Yl+a21dA6fHO
// SIG // mWaQjP9qYn/dxUoLkSbiOewZSnFjnXshbcOco6I8+n99
// SIG // lmqQeKZt0uGc+R38ONiU9MalCpaGpL2eGq4EQoO4tYCb
// SIG // IjggtSXlZOz39L9+Y1klD3ouOVd2onGqBooPiRa6YacR
// SIG // y5rYDkeagMXQzafQ732D8OE7cQnfXXSYIghh2rBQHm+9
// SIG // 8eEA3+cxB6STOvdlR3jo+KhIq/fecn5ha293qYHLpwms
// SIG // ObvsxsvYgrRyzR30uIUBHoD7G4kqVDmyW9rIDVWZeodz
// SIG // OwjmmC3qjeAzLhIp9cAvVCch98isTtoouLGp25ayp0Ki
// SIG // yc8ZQU3ghvkqmqMRZjDTu3QyS99je/WZii8bxyGvWbWu
// SIG // 3EQ8l1Bx16HSxVXjad5XwdHeMMD9zOZN+w2/XU/pnR4Z
// SIG // OC+8z1gFLu8NoFA12u8JJxzVs341Hgi62jbb01+P3nSI
// SIG // SRIwggTZMIIDwaADAgECAhMzAAAArg7WTpaJ2wD1AAAA
// SIG // AACuMA0GCSqGSIb3DQEBCwUAMHwxCzAJBgNVBAYTAlVT
// SIG // MRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdS
// SIG // ZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9y
// SIG // YXRpb24xJjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0
// SIG // YW1wIFBDQSAyMDEwMB4XDTE2MDkwNzE3NTY1NVoXDTE4
// SIG // MDkwNzE3NTY1NVowgbIxCzAJBgNVBAYTAlVTMRMwEQYD
// SIG // VQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25k
// SIG // MR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24x
// SIG // DDAKBgNVBAsTA0FPQzEnMCUGA1UECxMebkNpcGhlciBE
// SIG // U0UgRVNOOkQyMzYtMzdEQS05NzYxMSUwIwYDVQQDExxN
// SIG // aWNyb3NvZnQgVGltZS1TdGFtcCBTZXJ2aWNlMIIBIjAN
// SIG // BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA3pIvw6SV
// SIG // cvU+DWZkw/rm6CIPdIxNwZ7HtlS48Y9OfR/7RjC+fMt7
// SIG // ntvEZ1iSL/pUgAafoz6fFyH9qf/wymG9KP0EjifJBlKB
// SIG // WHrDUz7asn/6qIS1ta3C4o4haDCwAR/xg5w24EWR8VRc
// SIG // R1BvijcH33QtAWAt1X6t/trjjvHM0ZY9dIER1NgSvJqE
// SIG // s+d1aNmcBd0zGclYLwL5YObGqzYEcAGMG8FlucBKqXjg
// SIG // xV9VQP5wHi5I4qwpoPO+TNV4hMj7a1wwBS54Of8uTJQH
// SIG // FDGCenR7kgQ6iy14qY42GpEKKQdx9fvbPIsg6ATNOyaj
// SIG // /bueVT+Wtp/yGRTTcCR3gk0rywIDAQABo4IBGzCCARcw
// SIG // HQYDVR0OBBYEFH6P5TQ0RIvyeUC4xqDRnEMeISWxMB8G
// SIG // A1UdIwQYMBaAFNVjOlyKMZDzQ3t8RhvFM2hahW1VMFYG
// SIG // A1UdHwRPME0wS6BJoEeGRWh0dHA6Ly9jcmwubWljcm9z
// SIG // b2Z0LmNvbS9wa2kvY3JsL3Byb2R1Y3RzL01pY1RpbVN0
// SIG // YVBDQV8yMDEwLTA3LTAxLmNybDBaBggrBgEFBQcBAQRO
// SIG // MEwwSgYIKwYBBQUHMAKGPmh0dHA6Ly93d3cubWljcm9z
// SIG // b2Z0LmNvbS9wa2kvY2VydHMvTWljVGltU3RhUENBXzIw
// SIG // MTAtMDctMDEuY3J0MAwGA1UdEwEB/wQCMAAwEwYDVR0l
// SIG // BAwwCgYIKwYBBQUHAwgwDQYJKoZIhvcNAQELBQADggEB
// SIG // AD1ZTXjw9Fw0CNG1QWADUwz5jKZN5SIeoDyIpYNISkKW
// SIG // TTAAy25o/pGr9BmXMbVp8KwaEfn6QbLmqMFoMMRMQhwa
// SIG // Opose0S3ibzcjWJQpNiUE/xmvNEkVczgC+TcZbNT6rw2
// SIG // 4BYIQ3EU5qWTLwA36sHbuUehTciIHnGDaMm+wOAKgi31
// SIG // dVsdz6z8ml22rbJJOZk/Dali2C7IQc7dgmtG4SSWX+qk
// SIG // MIOq9oM9aRtebnupw6v5o2KU5gg4WM+Om/K8ayJ9LEMZ
// SIG // xU5rZ7b89mdYwhrPfZ9a69mRaxlziUuAYZ9bcihBcBiY
// SIG // 630OBm9qcgPWikcFMivQRyylguWSw9IQGiChggN0MIIC
// SIG // XAIBATCB4qGBuKSBtTCBsjELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEMMAoGA1UECxMDQU9DMScwJQYDVQQLEx5uQ2lwaGVy
// SIG // IERTRSBFU046RDIzNi0zN0RBLTk3NjExJTAjBgNVBAMT
// SIG // HE1pY3Jvc29mdCBUaW1lLVN0YW1wIFNlcnZpY2WiJQoB
// SIG // ATAJBgUrDgMCGgUAAxUAx8G9MHulGJ5kXmd0Nvq745m8
// SIG // aPuggcEwgb6kgbswgbgxCzAJBgNVBAYTAlVTMRMwEQYD
// SIG // VQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25k
// SIG // MR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24x
// SIG // DDAKBgNVBAsTA0FPQzEnMCUGA1UECxMebkNpcGhlciBO
// SIG // VFMgRVNOOjI2NjUtNEMzRi1DNURFMSswKQYDVQQDEyJN
// SIG // aWNyb3NvZnQgVGltZSBTb3VyY2UgTWFzdGVyIENsb2Nr
// SIG // MA0GCSqGSIb3DQEBBQUAAgUA3iyH3TAiGA8yMDE4MDIx
// SIG // MjIxMzgzN1oYDzIwMTgwMjEzMjEzODM3WjB0MDoGCisG
// SIG // AQQBhFkKBAExLDAqMAoCBQDeLIfdAgEAMAcCAQACAgzp
// SIG // MAcCAQACAhkGMAoCBQDeLdldAgEAMDYGCisGAQQBhFkK
// SIG // BAIxKDAmMAwGCisGAQQBhFkKAwGgCjAIAgEAAgMW42Ch
// SIG // CjAIAgEAAgMehIAwDQYJKoZIhvcNAQEFBQADggEBAJgm
// SIG // azASZupWEK7ckUAUVnbVX9mXZ2coooDm9ehKbdgaRqNN
// SIG // SNhiur7Xgx1Qx8XR5IEHjlaK8LA9o1NOlJythLxDcZoy
// SIG // fXaTEBqfcP6W3ZY6lrq2XXUgFSh76YAlzBkvQ3oHROGU
// SIG // 41XV+JzlQ8qtV7edwqzmJTL/5XMm4ZguBPaNiBPA65D0
// SIG // 4AHM5SeKcjArdq/jHkJ1kS71RsVECAi0xWQYSNSkciLT
// SIG // /4cUvsF6DW6vDDsgeEpLOl1PTLVo3DAnXho+x2DbmkVV
// SIG // 3tKBQyumQgk/c+hCnKluJZ01HOGOJhfhfQKCdlMsVmNv
// SIG // 00p1eo/QUGQneTVVh+TccmDCqQc5cJQxggL1MIIC8QIB
// SIG // ATCBkzB8MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2Fz
// SIG // aGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UE
// SIG // ChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQD
// SIG // Ex1NaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMAIT
// SIG // MwAAAK4O1k6WidsA9QAAAAAArjANBglghkgBZQMEAgEF
// SIG // AKCCATIwGgYJKoZIhvcNAQkDMQ0GCyqGSIb3DQEJEAEE
// SIG // MC8GCSqGSIb3DQEJBDEiBCBGDCWYGYMjbLy+GSmoxCOw
// SIG // vPJViwnxhpOobTwgLAeFkTCB4gYLKoZIhvcNAQkQAgwx
// SIG // gdIwgc8wgcwwgbEEFMfBvTB7pRieZF5ndDb6u+OZvGj7
// SIG // MIGYMIGApH4wfDELMAkGA1UEBhMCVVMxEzARBgNVBAgT
// SIG // Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAc
// SIG // BgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQG
// SIG // A1UEAxMdTWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIw
// SIG // MTACEzMAAACuDtZOlonbAPUAAAAAAK4wFgQU7RGrPIQx
// SIG // EZ5hkK8O+jp5Pzon3JQwDQYJKoZIhvcNAQELBQAEggEA
// SIG // bLlDF4Fqg8T9kWWY/8OttupG0CsZBkxRf4ZEcSjc8huU
// SIG // wWB3jBjUE0PY8h4orLdFeCB0w20GjcGnC0JFv07wtYxb
// SIG // EFkwT4fVdPNfYwA3CPydbGGhmhP5AsBX3hFpbKAtT258
// SIG // BM/tAf/GxyYRamFSj1gYmY0quOvK4zd+ZeqRXVfkLe2n
// SIG // xIMpQW/A+jDoRDArvS+H4EXjdTLYyxbZl6DTWMi4zeeJ
// SIG // a5Px3N+oDXRCT1rjA3XdzKu567sMMV4RKucDx9Nudp0P
// SIG // sLNhz3B6ENMhSsAXRbZrK06gHvU3k7YsmtL1braqdJxW
// SIG // gTK/qa7jeAEI8OXQznhFxzxxWWytYmpk6g==
// SIG // End signature block
