"use strict";
var c = require('./common');
var nls = require('vscode-nls');
var path = require('path');
var defaultLocale = 'en';
// nls.config(...)() call below will be rewritten to nls.config(...)(__filename) in build time where __filename is supposed to '*ResourceStrings.js'
// so that nls can find *ResourceStrings.nls.json.
// Redefining __filename here because when using browserify, otherwise the __filename will point to browserified file instead of this file.
var __filename = path.join(__dirname, 'libraryResourceStrings.js');
var localize = nls.config({ locale: defaultLocale, cacheLanguageResolution: false })(__filename);
var LibraryResourceStrings = (function () {
    function LibraryResourceStrings() {
    }
    LibraryResourceStrings.init = function () {
        if (!LibraryResourceStrings.isOsLocaleSet) {
            c.setOsLocale([LibraryResourceStrings.config]);
            LibraryResourceStrings.isOsLocaleSet = true;
        }
    };
    LibraryResourceStrings.config = function (locale, cache) {
        if (cache === void 0) { cache = false; }
        // nls.config(...)() call below will be rewritten to nls.config(...)(__filename) in build time where __filename is supposed to '*ResourceStrings.js'
        // so that nls can find *ResourceStrings.nls.json.
        // Redefining __filename here because when using browserify, otherwise the __filename will point to browserified file instead of this file.
        var __filename = path.join(__dirname, 'libraryResourceStrings.js');
        localize = nls.config({ locale: locale, cacheLanguageResolution: cache })(__filename);
    };
    LibraryResourceStrings.variablesAreNotDefined = function (variable) {
        LibraryResourceStrings.init();
        return localize(0, null, variable);
    };
    LibraryResourceStrings.variableIsNotDefined = function (variable) {
        LibraryResourceStrings.init();
        return localize(1, null, variable);
    };
    LibraryResourceStrings.startingServer = function (name, url, serverPath) {
        LibraryResourceStrings.init();
        return localize(2, null, name, url, serverPath);
    };
    LibraryResourceStrings.stoppedServer = function (name, url) {
        LibraryResourceStrings.init();
        return localize(3, null, name, url);
    };
    LibraryResourceStrings.urlShouldStartWith = function (scheme) {
        LibraryResourceStrings.init();
        return localize(4, null, scheme);
    };
    LibraryResourceStrings.urlHasNoPipeName = function (scheme) {
        LibraryResourceStrings.init();
        return localize(5, null, scheme);
    };
    LibraryResourceStrings.noPipeName = function (scheme) {
        LibraryResourceStrings.init();
        return localize(6, null, scheme);
    };
    LibraryResourceStrings.errorParsingJson = function (filePath, err) {
        LibraryResourceStrings.init();
        return localize(7, null, filePath, err);
    };
    LibraryResourceStrings.serviceHubConfigJsonNotFound = function (fileName, dir) {
        LibraryResourceStrings.init();
        return localize(8, null, fileName, dir);
    };
    LibraryResourceStrings.loading = function (path) {
        LibraryResourceStrings.init();
        return localize(9, null, path);
    };
    LibraryResourceStrings.noValueForProperty = function (fileName, dir, property) {
        LibraryResourceStrings.init();
        return localize(10, null, fileName, dir, property);
    };
    Object.defineProperty(LibraryResourceStrings, "failedGetSaltString", {
        get: function () {
            LibraryResourceStrings.init();
            return localize(11, null);
        },
        enumerable: true,
        configurable: true
    });
    LibraryResourceStrings.multipleFileFound = function (dir, files) {
        LibraryResourceStrings.init();
        return localize(12, null, dir, files);
    };
    LibraryResourceStrings.startingHubHost = function (hostId, pipeName) {
        LibraryResourceStrings.init();
        return localize(13, null, hostId, pipeName);
    };
    LibraryResourceStrings.startServiceRequestRejected = function (serviceName) {
        LibraryResourceStrings.init();
        return localize(14, null, serviceName);
    };
    LibraryResourceStrings.startServiceRequestReceived = function (serviceName) {
        LibraryResourceStrings.init();
        return localize(15, null, serviceName);
    };
    LibraryResourceStrings.serviceStarted = function (serviceName, pid, endPoint) {
        LibraryResourceStrings.init();
        return localize(16, null, serviceName, pid, endPoint);
    };
    Object.defineProperty(LibraryResourceStrings, "ignoringDuplicateExit", {
        get: function () {
            LibraryResourceStrings.init();
            return localize(17, null);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LibraryResourceStrings, "exitCommandReceived", {
        get: function () {
            LibraryResourceStrings.init();
            return localize(18, null);
        },
        enumerable: true,
        configurable: true
    });
    LibraryResourceStrings.closeHubStreamFailed = function (error) {
        LibraryResourceStrings.init();
        return localize(19, null, error);
    };
    LibraryResourceStrings.serviceStartedAfterHostShutDown = function (serviceName) {
        LibraryResourceStrings.init();
        return localize(20, null, serviceName);
    };
    LibraryResourceStrings.notifyHubControllerForServicesStartedFailed = function (error) {
        LibraryResourceStrings.init();
        return localize(21, null, error);
    };
    LibraryResourceStrings.notifyHubControllerForServicesEndedFailed = function (error) {
        LibraryResourceStrings.init();
        return localize(22, null, error);
    };
    Object.defineProperty(LibraryResourceStrings, "serviceNameNotSpecified", {
        get: function () {
            LibraryResourceStrings.init();
            return localize(23, null);
        },
        enumerable: true,
        configurable: true
    });
    LibraryResourceStrings.locatingService = function (serviceName, clientId) {
        LibraryResourceStrings.init();
        return localize(24, null, serviceName, clientId);
    };
    LibraryResourceStrings.serviceLocated = function (serviceId, serviceLocation, clientId) {
        LibraryResourceStrings.init();
        return localize(25, null, serviceId, serviceLocation, clientId);
    };
    LibraryResourceStrings.startingServiceFailed = function (serviceId, clientId, error) {
        LibraryResourceStrings.init();
        return localize(26, null, serviceId, clientId, error);
    };
    Object.defineProperty(LibraryResourceStrings, "forceControllerShutDown", {
        get: function () {
            LibraryResourceStrings.init();
            return localize(27, null);
        },
        enumerable: true,
        configurable: true
    });
    LibraryResourceStrings.locatingServcieError = function (discoveryService, service, error, callStack) {
        LibraryResourceStrings.init();
        return localize(28, null, discoveryService, service, error, callStack);
    };
    LibraryResourceStrings.disconnectingDiscoveryServiceFailed = function (discoveryService, error, callStack) {
        LibraryResourceStrings.init();
        return localize(29, null, discoveryService, error, callStack);
    };
    LibraryResourceStrings.hostTypeNotFoundInLocation = function (hostType, location, additionalLocation) {
        LibraryResourceStrings.init();
        return localize(30, null, hostType, location, additionalLocation);
    };
    LibraryResourceStrings.hostTypeNotFound = function (hostType, location) {
        LibraryResourceStrings.init();
        return localize(31, null, hostType, location);
    };
    LibraryResourceStrings.loadingHostInfo = function (host, filePath) {
        LibraryResourceStrings.init();
        return localize(32, null, host, filePath);
    };
    LibraryResourceStrings.cannotResolveHost = function (host, filePath, error) {
        LibraryResourceStrings.init();
        return localize(33, null, host, filePath, error);
    };
    LibraryResourceStrings.hostInfoNotDefined = function (path) {
        LibraryResourceStrings.init();
        return localize(34, null, path);
    };
    LibraryResourceStrings.hostInfoInvalid = function (path) {
        LibraryResourceStrings.init();
        return localize(35, null, path);
    };
    LibraryResourceStrings.hostInfoContainsReservedProperty = function (path) {
        LibraryResourceStrings.init();
        return localize(36, null, path);
    };
    LibraryResourceStrings.firstTimeLoadingService = function (serviceName) {
        LibraryResourceStrings.init();
        return localize(37, null, serviceName);
    };
    LibraryResourceStrings.launchingHostWithCmd = function (host, cmd) {
        LibraryResourceStrings.init();
        return localize(38, null, host, cmd);
    };
    LibraryResourceStrings.hostLaunched = function (host, pid) {
        LibraryResourceStrings.init();
        return localize(39, null, host, pid);
    };
    LibraryResourceStrings.hostExited = function (host, pid) {
        LibraryResourceStrings.init();
        return localize(40, null, host, pid);
    };
    LibraryResourceStrings.hostExitedWithCode = function (code, exitCode) {
        LibraryResourceStrings.init();
        return localize(41, null, code, exitCode);
    };
    LibraryResourceStrings.hostExitedWithSignal = function (signal) {
        LibraryResourceStrings.init();
        return localize(42, null, signal);
    };
    LibraryResourceStrings.startingHostError = function (executable, hostId, error) {
        LibraryResourceStrings.init();
        return localize(43, null, executable, hostId, error);
    };
    LibraryResourceStrings.hostInfoNotFound = function (id) {
        LibraryResourceStrings.init();
        return localize(44, null, id);
    };
    LibraryResourceStrings.getHostIdFailed = function (error) {
        LibraryResourceStrings.init();
        return localize(45, null, error);
    };
    Object.defineProperty(LibraryResourceStrings, "moreThanOneHostPending", {
        get: function () {
            LibraryResourceStrings.init();
            return localize(46, null);
        },
        enumerable: true,
        configurable: true
    });
    LibraryResourceStrings.unknownHost = function (hostId) {
        LibraryResourceStrings.init();
        return localize(47, null, hostId);
    };
    LibraryResourceStrings.stoppingHost = function (hostId, pid, reason) {
        LibraryResourceStrings.init();
        return localize(48, null, hostId, pid, reason);
    };
    Object.defineProperty(LibraryResourceStrings, "cannotStopLocationService", {
        get: function () {
            LibraryResourceStrings.init();
            return localize(49, null);
        },
        enumerable: true,
        configurable: true
    });
    LibraryResourceStrings.errorDecoding = function (error) {
        LibraryResourceStrings.init();
        return localize(50, null, error);
    };
    LibraryResourceStrings.logConfig = function (config) {
        LibraryResourceStrings.init();
        return localize(51, null, config);
    };
    Object.defineProperty(LibraryResourceStrings, "messageAt", {
        get: function () {
            LibraryResourceStrings.init();
            return localize(52, null);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LibraryResourceStrings, "lengthCannotBeNegative", {
        get: function () {
            LibraryResourceStrings.init();
            return localize(53, null);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LibraryResourceStrings, "noFolderSpecified", {
        get: function () {
            LibraryResourceStrings.init();
            return localize(54, null);
        },
        enumerable: true,
        configurable: true
    });
    LibraryResourceStrings.cannotFindServiceModuleFile = function (filePattern, folder) {
        LibraryResourceStrings.init();
        return localize(55, null, filePattern, folder);
    };
    LibraryResourceStrings.cannotFindServiceModuleFileWithReason = function (filePattern, folder, error) {
        LibraryResourceStrings.init();
        return localize(56, null, filePattern, folder, error);
    };
    LibraryResourceStrings.loadingServiceModule = function (filePath, service) {
        LibraryResourceStrings.init();
        return localize(57, null, filePath, service);
    };
    LibraryResourceStrings.serviceInfoInvalid = function (filePath, service, property) {
        LibraryResourceStrings.init();
        return localize(58, null, filePath, service, property);
    };
    LibraryResourceStrings.serviceInfoInvalidSpaceInHostId = function (filePath, service, hostId) {
        LibraryResourceStrings.init();
        return localize(59, null, filePath, service, hostId);
    };
    LibraryResourceStrings.cannotResolveServiceModuleInfo = function (filePath, service, error) {
        LibraryResourceStrings.init();
        return localize(60, null, service, filePath, error);
    };
    LibraryResourceStrings.startingService = function (service) {
        LibraryResourceStrings.init();
        return localize(61, null, service);
    };
    LibraryResourceStrings.variableMustBeFunction = function (variable, moduleName, actualType) {
        LibraryResourceStrings.init();
        return localize(62, null, variable, moduleName, actualType);
    };
    LibraryResourceStrings.serviceEntryPointFileNameNotFound = function (name) {
        LibraryResourceStrings.init();
        return localize(63, null, name);
    };
    LibraryResourceStrings.serviceEntryPointConstructorNotFound = function (name) {
        LibraryResourceStrings.init();
        return localize(64, null, name);
    };
    LibraryResourceStrings.loadServiceModuleError = function (moduleName, error) {
        LibraryResourceStrings.init();
        return localize(65, null, moduleName, error);
    };
    LibraryResourceStrings.connectedToService = function (name) {
        LibraryResourceStrings.init();
        return localize(66, null, name);
    };
    LibraryResourceStrings.disposeServiceError = function (instanceName, name, error) {
        LibraryResourceStrings.init();
        return localize(67, null, instanceName, name, error);
    };
    LibraryResourceStrings.createServiceInstanceError = function (name, error) {
        LibraryResourceStrings.init();
        return localize(68, null, name, error);
    };
    LibraryResourceStrings.failedToDeleteFile = function (path, errCode, errMessage) {
        LibraryResourceStrings.init();
        return localize(69, null, path, errCode, errMessage);
    };
    LibraryResourceStrings.failedToGetFileStats = function (path, errCode, errMessage) {
        LibraryResourceStrings.init();
        return localize(70, null, path, errCode, errMessage);
    };
    LibraryResourceStrings.failedToEnumerateFilesInDir = function (path, errCode, errMessage) {
        LibraryResourceStrings.init();
        return localize(71, null, path, errCode, errMessage);
    };
    LibraryResourceStrings.serviceHubConfigFilePathIsNotAbsolute = function (serviceHubConfigFilePath) {
        LibraryResourceStrings.init();
        return localize(72, null, serviceHubConfigFilePath);
    };
    LibraryResourceStrings.serviceHubConfigFileNameIsIncorrect = function (serviceHubConfigFilePath) {
        LibraryResourceStrings.init();
        return localize(73, null, serviceHubConfigFilePath);
    };
    LibraryResourceStrings.serviceHubConfigFileDoesNotExist = function (serviceHubConfigFilePath) {
        LibraryResourceStrings.init();
        return localize(74, null, serviceHubConfigFilePath);
    };
    LibraryResourceStrings.HostGroupNotSupported = function (serviceName, hostGroup, propertyName) {
        LibraryResourceStrings.init();
        return localize(75, null, serviceName, hostGroup, propertyName);
    };
    Object.defineProperty(LibraryResourceStrings, "objectDisposed", {
        get: function () {
            LibraryResourceStrings.init();
            return localize(76, null);
        },
        enumerable: true,
        configurable: true
    });
    return LibraryResourceStrings;
}());
exports.LibraryResourceStrings = LibraryResourceStrings;
//# sourceMappingURL=libraryResourceStrings.js.map
// SIG // Begin signature block
// SIG // MIIh1QYJKoZIhvcNAQcCoIIhxjCCIcICAQExDzANBglg
// SIG // hkgBZQMEAgEFADB3BgorBgEEAYI3AgEEoGkwZzAyBgor
// SIG // BgEEAYI3AgEeMCQCAQEEEBDgyQbOONQRoqMAEEvTUJAC
// SIG // AQACAQACAQACAQACAQAwMTANBglghkgBZQMEAgEFAAQg
// SIG // 5u/00LoREjodJDphbdhA8capxTJkqm/iKws/crwfiVmg
// SIG // ggtWMIIE3jCCA8agAwIBAgITMwAAAcy1W0IXB2ATEQAA
// SIG // AAABzDANBgkqhkiG9w0BAQsFADB+MQswCQYDVQQGEwJV
// SIG // UzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMH
// SIG // UmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBv
// SIG // cmF0aW9uMSgwJgYDVQQDEx9NaWNyb3NvZnQgQ29kZSBT
// SIG // aWduaW5nIFBDQSAyMDEwMB4XDTE3MDkxMjE4MDcwNloX
// SIG // DTE4MDkxMjE4MDcwNlowdDELMAkGA1UEBhMCVVMxEzAR
// SIG // BgNVBAgTCldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1v
// SIG // bmQxHjAcBgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlv
// SIG // bjEeMBwGA1UEAxMVTWljcm9zb2Z0IENvcnBvcmF0aW9u
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // qZB1moyDMhvorMTex1h+UmWZ52gS7QV0SxKYiTA2P3Ep
// SIG // m3JVmRehPh979B7y6IQgC1C1jrZvtxI21cmxI2KOfkIu
// SIG // 6QywYHZohyxI1JMbfDeVZVCHaafQKW+IZeKZwjAMl2Cw
// SIG // GqeLCmRY3bNRsq5x9ldPKLQX5dZgsCuGeSgrWfQbvlw5
// SIG // 9LTN/Ds5kGkZf2dMSzu6n1lVGgY/7KT75ZCq/p7p4Eru
// SIG // STIPMUnCks35BzTHKwAwEP0QyhnsJGPq3a2Kk/XGmgiU
// SIG // Is9Co0CnbcwsXdXxQceTdcovfituYLlo8qowRTX575Lh
// SIG // dSSJQFyepgmTN94YvAm0bUWaQsK5czBxiwIDAQABo4IB
// SIG // XTCCAVkwHwYDVR0lBBgwFgYKKwYBBAGCNz0GAQYIKwYB
// SIG // BQUHAwMwHQYDVR0OBBYEFFlVxIKPLL3blp451S/Ro/0y
// SIG // ArJ/MDQGA1UdEQQtMCukKTAnMQ0wCwYDVQQLEwRNT1BS
// SIG // MRYwFAYDVQQFEw0yMzA4NjUrMjQyNDA2MB8GA1UdIwQY
// SIG // MBaAFOb8X3u7IgBY5HJOtfQhdCMy5u+sMFYGA1UdHwRP
// SIG // ME0wS6BJoEeGRWh0dHA6Ly9jcmwubWljcm9zb2Z0LmNv
// SIG // bS9wa2kvY3JsL3Byb2R1Y3RzL01pY0NvZFNpZ1BDQV8y
// SIG // MDEwLTA3LTA2LmNybDBaBggrBgEFBQcBAQROMEwwSgYI
// SIG // KwYBBQUHMAKGPmh0dHA6Ly93d3cubWljcm9zb2Z0LmNv
// SIG // bS9wa2kvY2VydHMvTWljQ29kU2lnUENBXzIwMTAtMDct
// SIG // MDYuY3J0MAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQEL
// SIG // BQADggEBANGT7iex7letmRmMI2tjEMw591UYclg78am3
// SIG // zuDKljBRU8yY8BJTGCvoGpikCbUB0SNGoXj3/2XOTlse
// SIG // YC5zfrAJekrn1313An/RxRGJsD8y7Ya38xAJ244R01Yd
// SIG // 9IVXAin+6rhRv0PufFSfH7mdyeAMDE4Y0Dj3j6pw8Cob
// SIG // tPMrYXtwihbvO/faO/afni6lv4RlCSU5sdIgCdq42Q/k
// SIG // J31KgwF17IJ30LmgQyumPqUe9UsDdCWIo2BiJc2NOvaR
// SIG // ChsDvWdCyaOrmpP9elruUdb5hm5M5wBYLEPT+kTIAx6f
// SIG // 78TM4c2wyev6XQjaR4FXESduccHGT35ECK8c7quVDqMw
// SIG // ggZwMIIEWKADAgECAgphDFJMAAAAAAADMA0GCSqGSIb3
// SIG // DQEBCwUAMIGIMQswCQYDVQQGEwJVUzETMBEGA1UECBMK
// SIG // V2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwG
// SIG // A1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTIwMAYD
// SIG // VQQDEylNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBB
// SIG // dXRob3JpdHkgMjAxMDAeFw0xMDA3MDYyMDQwMTdaFw0y
// SIG // NTA3MDYyMDUwMTdaMH4xCzAJBgNVBAYTAlVTMRMwEQYD
// SIG // VQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25k
// SIG // MR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24x
// SIG // KDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNpZ25pbmcg
// SIG // UENBIDIwMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
// SIG // ggEKAoIBAQDpDmRQeWe1xOP9CQBMnpSs91Zo6kTYz8VY
// SIG // T6mldnxtRbrTOZK0pB75+WWC5BfSj/1EnAjoZZPOLFWE
// SIG // v30I4y4rqEErGLeiS25JTGsVB97R0sKJHnGUzbV/S7Sv
// SIG // CNjMiNZrF5Q6k84mP+zm/jSYV9UdXUn2siou1YW7WT/4
// SIG // kLQrg3TKK7M7RuPwRknBF2ZUyRy9HcRVYldy+Ge5JSA0
// SIG // 3l2mpZVeqyiAzdWynuUDtWPTshTIwciKJgpZfwfs/w7t
// SIG // gBI1TBKmvlJb9aba4IsLSHfWhUfVELnG6Krui2otBVxg
// SIG // xrQqW5wjHF9F4xoUHm83yxkzgGqJTaNqZmN4k9Uwz5Uf
// SIG // AgMBAAGjggHjMIIB3zAQBgkrBgEEAYI3FQEEAwIBADAd
// SIG // BgNVHQ4EFgQU5vxfe7siAFjkck619CF0IzLm76wwGQYJ
// SIG // KwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYDVR0PBAQD
// SIG // AgGGMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAU
// SIG // 1fZWy4/oolxiaNE9lJBb186aGMQwVgYDVR0fBE8wTTBL
// SIG // oEmgR4ZFaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3Br
// SIG // aS9jcmwvcHJvZHVjdHMvTWljUm9vQ2VyQXV0XzIwMTAt
// SIG // MDYtMjMuY3JsMFoGCCsGAQUFBwEBBE4wTDBKBggrBgEF
// SIG // BQcwAoY+aHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3Br
// SIG // aS9jZXJ0cy9NaWNSb29DZXJBdXRfMjAxMC0wNi0yMy5j
// SIG // cnQwgZ0GA1UdIASBlTCBkjCBjwYJKwYBBAGCNy4DMIGB
// SIG // MD0GCCsGAQUFBwIBFjFodHRwOi8vd3d3Lm1pY3Jvc29m
// SIG // dC5jb20vUEtJL2RvY3MvQ1BTL2RlZmF1bHQuaHRtMEAG
// SIG // CCsGAQUFBwICMDQeMiAdAEwAZQBnAGEAbABfAFAAbwBs
// SIG // AGkAYwB5AF8AUwB0AGEAdABlAG0AZQBuAHQALiAdMA0G
// SIG // CSqGSIb3DQEBCwUAA4ICAQAadO9XTyl7xBaFeLhQ0yL8
// SIG // CZ2sgpf4NP8qLJeVEuXkv8+/k8jjNKnbgbjcHgC+0jVv
// SIG // r+V/eZV35QLU8evYzU4eG2GiwlojGvCMqGJRRWcI4z88
// SIG // HpP4MIUXyDlAptcOsyEp5aWhaYwik8x0mOehR0PyU6zA
// SIG // DzBpf/7SJSBtb2HT3wfV2XIALGmGdj1R26Y5SMk3YW0H
// SIG // 3VMZy6fWYcK/4oOrD+Brm5XWfShRsIlKUaSabMi3H0oa
// SIG // Dmmp19zBftFJcKq2rbtyR2MX+qbWoqaG7KgQRJtjtrJp
// SIG // iQbHRoZ6GD/oxR0h1Xv5AiMtxUHLvx1MyBbvsZx//CJL
// SIG // SYpuFeOmf3Zb0VN5kYWd1dLbPXM18zyuVLJSR2rAqhOV
// SIG // 0o4R2plnXjKM+zeF0dx1hZyHxlpXhcK/3Q2PjJst67Tu
// SIG // zyfTtV5p+qQWBAGnJGdzz01Ptt4FVpd69+lSTfR3BU+F
// SIG // xtgL8Y7tQgnRDXbjI1Z4IiY2vsqxjG6qHeSF2kczYo+k
// SIG // yZEzX3EeQK+YZcki6EIhJYocLWDZN4lBiSoWD9dhPJRo
// SIG // YFLv1keZoIBA7hWBdz6c4FMYGlAdOJWbHmYzEyc5F3iH
// SIG // Ns5Ow1+y9T1HU7bg5dsLYT0q15IszjdaPkBCMaQfEAjC
// SIG // Vpy/JF1RAp1qedIX09rBlI4HeyVxRKsGaubUxt8jmpZ1
// SIG // xTGCFdcwghXTAgEBMIGVMH4xCzAJBgNVBAYTAlVTMRMw
// SIG // EQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRt
// SIG // b25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRp
// SIG // b24xKDAmBgNVBAMTH01pY3Jvc29mdCBDb2RlIFNpZ25p
// SIG // bmcgUENBIDIwMTACEzMAAAHMtVtCFwdgExEAAAAAAcww
// SIG // DQYJYIZIAWUDBAIBBQCggcowGQYJKoZIhvcNAQkDMQwG
// SIG // CisGAQQBgjcCAQQwHAYKKwYBBAGCNwIBCzEOMAwGCisG
// SIG // AQQBgjcCARUwLwYJKoZIhvcNAQkEMSIEIDqc3hkoXyMM
// SIG // IYkdUZAQdcq8wga0+iLT5a6nqDGt3igpMF4GCisGAQQB
// SIG // gjcCAQwxUDBOoDSAMgBsAGkAYgByAGEAcgB5AFIAZQBz
// SIG // AG8AdQByAGMAZQBTAHQAcgBpAG4AZwBzAC4AagBzoRaA
// SIG // FGh0dHA6Ly9taWNyb3NvZnQuY29tMA0GCSqGSIb3DQEB
// SIG // AQUABIIBABxRj1gTCAkeT/aMWov3R0p3O9AlGy7EZqI+
// SIG // Q/Xxo7CfdsjV1AavokTgqHE+yW3alaiXiF0xJeYBIZKw
// SIG // dHdATD7krwTTGDcahtuj9hBBhw0dCC1W4+CgUxYzWu20
// SIG // 3gDNKRE0kzIqYSzFf4xcJlgBldA7uVVwLDkpXOuJ4Gkm
// SIG // CmY2n+tNXjflSiY32y6Q83cVcGOfYk/qFY2QtYMgf2d6
// SIG // QKR7rRWesuS1VfjcuLApR27NahWR7b50vOzJmuI3M4sc
// SIG // w//XnoqkV/egmZSyVynFVxlMd6Blsj6/6nGuyFWiQrei
// SIG // tEIRogxDyaaFINfMN9y/489emSFjmqievp152B2g9uSh
// SIG // ghNFMIITQQYKKwYBBAGCNwMDATGCEzEwghMtBgkqhkiG
// SIG // 9w0BBwKgghMeMIITGgIBAzEPMA0GCWCGSAFlAwQCAQUA
// SIG // MIIBOwYLKoZIhvcNAQkQAQSgggEqBIIBJjCCASICAQEG
// SIG // CisGAQQBhFkKAwEwMTANBglghkgBZQMEAgEFAAQgFGqN
// SIG // Ti15EP058+0Vr3wYbcG2cEyOFAKeP6LgC/YSyhUCBlp7
// SIG // U0tOhhgSMjAxODAyMTMwNTEyMzEuNzZaMAcCAQGAAgPn
// SIG // oIG4pIG1MIGyMQswCQYDVQQGEwJVUzETMBEGA1UECBMK
// SIG // V2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwG
// SIG // A1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMQwwCgYD
// SIG // VQQLEwNBT0MxJzAlBgNVBAsTHm5DaXBoZXIgRFNFIEVT
// SIG // Tjo4NDNELTM3RjYtRjEwNDElMCMGA1UEAxMcTWljcm9z
// SIG // b2Z0IFRpbWUtU3RhbXAgU2VydmljZaCCDsowggZxMIIE
// SIG // WaADAgECAgphCYEqAAAAAAACMA0GCSqGSIb3DQEBCwUA
// SIG // MIGIMQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGlu
// SIG // Z3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMV
// SIG // TWljcm9zb2Z0IENvcnBvcmF0aW9uMTIwMAYDVQQDEylN
// SIG // aWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3Jp
// SIG // dHkgMjAxMDAeFw0xMDA3MDEyMTM2NTVaFw0yNTA3MDEy
// SIG // MTQ2NTVaMHwxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpX
// SIG // YXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYD
// SIG // VQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xJjAkBgNV
// SIG // BAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBDQSAyMDEw
// SIG // MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
// SIG // qR0NvHcRijog7PwTl/X6f2mUa3RUENWlCgCChfvtfGhL
// SIG // LF/Fw+Vhwna3PmYrW/AVUycEMR9BGxqVHc4JE458YTBZ
// SIG // sTBED/FgiIRUQwzXTbg4CLNC3ZOs1nMwVyaCo0UN0Or1
// SIG // R4HNvyRgMlhgRvJYR4YyhB50YWeRX4FUsc+TTJLBxKZd
// SIG // 0WETbijGGvmGgLvfYfxGwScdJGcSchohiq9LZIlQYrFd
// SIG // /XcfPfBXday9ikJNQFHRD5wGPmd/9WbAA5ZEfu/QS/1u
// SIG // 5ZrKsajyeioKMfDaTgaRtogINeh4HLDpmc085y9Euqf0
// SIG // 3GS9pAHBIAmTeM38vMDJRF1eFpwBBU8iTQIDAQABo4IB
// SIG // 5jCCAeIwEAYJKwYBBAGCNxUBBAMCAQAwHQYDVR0OBBYE
// SIG // FNVjOlyKMZDzQ3t8RhvFM2hahW1VMBkGCSsGAQQBgjcU
// SIG // AgQMHgoAUwB1AGIAQwBBMAsGA1UdDwQEAwIBhjAPBgNV
// SIG // HRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNX2VsuP6KJc
// SIG // YmjRPZSQW9fOmhjEMFYGA1UdHwRPME0wS6BJoEeGRWh0
// SIG // dHA6Ly9jcmwubWljcm9zb2Z0LmNvbS9wa2kvY3JsL3By
// SIG // b2R1Y3RzL01pY1Jvb0NlckF1dF8yMDEwLTA2LTIzLmNy
// SIG // bDBaBggrBgEFBQcBAQROMEwwSgYIKwYBBQUHMAKGPmh0
// SIG // dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMv
// SIG // TWljUm9vQ2VyQXV0XzIwMTAtMDYtMjMuY3J0MIGgBgNV
// SIG // HSABAf8EgZUwgZIwgY8GCSsGAQQBgjcuAzCBgTA9Bggr
// SIG // BgEFBQcCARYxaHR0cDovL3d3dy5taWNyb3NvZnQuY29t
// SIG // L1BLSS9kb2NzL0NQUy9kZWZhdWx0Lmh0bTBABggrBgEF
// SIG // BQcCAjA0HjIgHQBMAGUAZwBhAGwAXwBQAG8AbABpAGMA
// SIG // eQBfAFMAdABhAHQAZQBtAGUAbgB0AC4gHTANBgkqhkiG
// SIG // 9w0BAQsFAAOCAgEAB+aIUQ3ixuCYP4FxAz2do6Ehb7Pr
// SIG // psz1Mb7PBeKp/vpXbRkws8LFZslq3/Xn8Hi9x6ieJeP5
// SIG // vO1rVFcIK1GCRBL7uVOMzPRgEop2zEBAQZvcXBf/XPle
// SIG // FzWYJFZLdO9CEMivv3/Gf/I3fVo/HPKZeUqRUgCvOA8X
// SIG // 9S95gWXZqbVr5MfO9sp6AG9LMEQkIjzP7QOllo9ZKby2
// SIG // /QThcJ8ySif9Va8v/rbljjO7Yl+a21dA6fHOmWaQjP9q
// SIG // Yn/dxUoLkSbiOewZSnFjnXshbcOco6I8+n99lmqQeKZt
// SIG // 0uGc+R38ONiU9MalCpaGpL2eGq4EQoO4tYCbIjggtSXl
// SIG // ZOz39L9+Y1klD3ouOVd2onGqBooPiRa6YacRy5rYDkea
// SIG // gMXQzafQ732D8OE7cQnfXXSYIghh2rBQHm+98eEA3+cx
// SIG // B6STOvdlR3jo+KhIq/fecn5ha293qYHLpwmsObvsxsvY
// SIG // grRyzR30uIUBHoD7G4kqVDmyW9rIDVWZeodzOwjmmC3q
// SIG // jeAzLhIp9cAvVCch98isTtoouLGp25ayp0Kiyc8ZQU3g
// SIG // hvkqmqMRZjDTu3QyS99je/WZii8bxyGvWbWu3EQ8l1Bx
// SIG // 16HSxVXjad5XwdHeMMD9zOZN+w2/XU/pnR4ZOC+8z1gF
// SIG // Lu8NoFA12u8JJxzVs341Hgi62jbb01+P3nSISRIwggTZ
// SIG // MIIDwaADAgECAhMzAAAAqVRw2XnAhGXiAAAAAACpMA0G
// SIG // CSqGSIb3DQEBCwUAMHwxCzAJBgNVBAYTAlVTMRMwEQYD
// SIG // VQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25k
// SIG // MR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24x
// SIG // JjAkBgNVBAMTHU1pY3Jvc29mdCBUaW1lLVN0YW1wIFBD
// SIG // QSAyMDEwMB4XDTE2MDkwNzE3NTY1M1oXDTE4MDkwNzE3
// SIG // NTY1M1owgbIxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpX
// SIG // YXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYD
// SIG // VQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xDDAKBgNV
// SIG // BAsTA0FPQzEnMCUGA1UECxMebkNpcGhlciBEU0UgRVNO
// SIG // Ojg0M0QtMzdGNi1GMTA0MSUwIwYDVQQDExxNaWNyb3Nv
// SIG // ZnQgVGltZS1TdGFtcCBTZXJ2aWNlMIIBIjANBgkqhkiG
// SIG // 9w0BAQEFAAOCAQ8AMIIBCgKCAQEArJSFGKblVtOd3wNn
// SIG // LtuYkUePlYlyTZp08zRA3msRp9THkn4O/581On+nZIxx
// SIG // m2HFGVk+lF2RL07A7cFAbicHkdTlrPYePM5QEVMnaITS
// SIG // 0makH24deymLJuMJrnTnTPyfg7dGDdsVqQ37V/ezmxDe
// SIG // DBykTRrDliRGNimQXN4dR9aXP0KNB/+oLyeO6xIQsUdC
// SIG // 9wS9OTbExbvA7La8joGcyd2yQDw9o+sbvTB1/lsFcx0U
// SIG // MRHU8Dq/7NET3kTJxP5I4VfELngIFX7zRQY2Sba1/Vgd
// SIG // Ed2IZANCEDnvrlMWRhFbXH0SWndIdnApYSEak1OcImlu
// SIG // nLR5eo5MOIQVGWxfoQIDAQABo4IBGzCCARcwHQYDVR0O
// SIG // BBYEFA/VQfu78530vklS2ow3V85kD/N9MB8GA1UdIwQY
// SIG // MBaAFNVjOlyKMZDzQ3t8RhvFM2hahW1VMFYGA1UdHwRP
// SIG // ME0wS6BJoEeGRWh0dHA6Ly9jcmwubWljcm9zb2Z0LmNv
// SIG // bS9wa2kvY3JsL3Byb2R1Y3RzL01pY1RpbVN0YVBDQV8y
// SIG // MDEwLTA3LTAxLmNybDBaBggrBgEFBQcBAQROMEwwSgYI
// SIG // KwYBBQUHMAKGPmh0dHA6Ly93d3cubWljcm9zb2Z0LmNv
// SIG // bS9wa2kvY2VydHMvTWljVGltU3RhUENBXzIwMTAtMDct
// SIG // MDEuY3J0MAwGA1UdEwEB/wQCMAAwEwYDVR0lBAwwCgYI
// SIG // KwYBBQUHAwgwDQYJKoZIhvcNAQELBQADggEBAAiZGKUH
// SIG // iy9yJHUsjiCEAv0Koa8O4bAyEYaqxYYgnbvoRDuVzLU6
// SIG // 54tGpRPTjCAbqDpXHBX3c22NC7IHRW6GRXYkRrp0TPE2
// SIG // b1KdtuTklIzJKauJqr5ygtO6m1WroII54Bku2BGtRYkD
// SIG // S8Av4gCeuHuH28rXdbguBLSMkzeKHiZE5NlBZY7RQrle
// SIG // ExC8GWd1u86EqekfjnvPG5S4OV1tV1nsCn7G1pUNO+f6
// SIG // iC9WrFUEUHJnP7IAA8OOwvw+yJWr4NRntqY0bbRgCLJC
// SIG // id5/YNpYIbzTjDgyU/IKzNvfJLcA65NKPwl6NDtLwHNr
// SIG // alKEU6GbBERZYUKtcvBAwG78mrKhggN0MIICXAIBATCB
// SIG // 4qGBuKSBtTCBsjELMAkGA1UEBhMCVVMxEzARBgNVBAgT
// SIG // Cldhc2hpbmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAc
// SIG // BgNVBAoTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEMMAoG
// SIG // A1UECxMDQU9DMScwJQYDVQQLEx5uQ2lwaGVyIERTRSBF
// SIG // U046ODQzRC0zN0Y2LUYxMDQxJTAjBgNVBAMTHE1pY3Jv
// SIG // c29mdCBUaW1lLVN0YW1wIFNlcnZpY2WiJQoBATAJBgUr
// SIG // DgMCGgUAAxUAXTq/Vr3hDynKcg5k93U7eBoi6/SggcEw
// SIG // gb6kgbswgbgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpX
// SIG // YXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYD
// SIG // VQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xDDAKBgNV
// SIG // BAsTA0FPQzEnMCUGA1UECxMebkNpcGhlciBOVFMgRVNO
// SIG // OjI2NjUtNEMzRi1DNURFMSswKQYDVQQDEyJNaWNyb3Nv
// SIG // ZnQgVGltZSBTb3VyY2UgTWFzdGVyIENsb2NrMA0GCSqG
// SIG // SIb3DQEBBQUAAgUA3iyELDAiGA8yMDE4MDIxMjIxMjI1
// SIG // MloYDzIwMTgwMjEzMjEyMjUyWjB0MDoGCisGAQQBhFkK
// SIG // BAExLDAqMAoCBQDeLIQsAgEAMAcCAQACAgtcMAcCAQAC
// SIG // AhlLMAoCBQDeLdWsAgEAMDYGCisGAQQBhFkKBAIxKDAm
// SIG // MAwGCisGAQQBhFkKAwGgCjAIAgEAAgMegJihCjAIAgEA
// SIG // AgMehIAwDQYJKoZIhvcNAQEFBQADggEBAGgNNpEQlXij
// SIG // 1Y1pA5W7nqmxOaIoO4ED/IWcsBlzhON+jrlkN8nmH4or
// SIG // a7VJZE5beI5gb0aNJthIuB6S9rVXyrZldJFkuYuOcSaV
// SIG // 4TIuJ3ZFedi+oQtfvHEx+5ElcDyiFBhVWPI5/hmV5xpy
// SIG // L9+nGHnP0JOC57jPOeqQLqw6siO3QjMj1pgtxUgAzA+p
// SIG // z+GBXJWoybWURZ31rCh53io+46mW+S1VeFe+bu8aHx9u
// SIG // kOV/1SMQ0RuQ3SzXjwyJZne6rbsaerFv5QrACnswCbYA
// SIG // /aR2WugKoRfZwEXgwKErX7sdcqSIzjYmvJnNeFKXIKxS
// SIG // wLR8V8o9BVuOWJMTfQfJBBAxggL1MIIC8QIBATCBkzB8
// SIG // MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3Rv
// SIG // bjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWlj
// SIG // cm9zb2Z0IENvcnBvcmF0aW9uMSYwJAYDVQQDEx1NaWNy
// SIG // b3NvZnQgVGltZS1TdGFtcCBQQ0EgMjAxMAITMwAAAKlU
// SIG // cNl5wIRl4gAAAAAAqTANBglghkgBZQMEAgEFAKCCATIw
// SIG // GgYJKoZIhvcNAQkDMQ0GCyqGSIb3DQEJEAEEMC8GCSqG
// SIG // SIb3DQEJBDEiBCDDPrnTvZWGROSD+tJdVpji19o8nSoX
// SIG // mbKbklBkfxD/+TCB4gYLKoZIhvcNAQkQAgwxgdIwgc8w
// SIG // gcwwgbEEFF06v1a94Q8pynIOZPd1O3gaIuv0MIGYMIGA
// SIG // pH4wfDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCldhc2hp
// SIG // bmd0b24xEDAOBgNVBAcTB1JlZG1vbmQxHjAcBgNVBAoT
// SIG // FU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjEmMCQGA1UEAxMd
// SIG // TWljcm9zb2Z0IFRpbWUtU3RhbXAgUENBIDIwMTACEzMA
// SIG // AACpVHDZecCEZeIAAAAAAKkwFgQUiCKwZQeSJxLUk+jD
// SIG // lPaoYmZsRv8wDQYJKoZIhvcNAQELBQAEggEAppSuxT/7
// SIG // hA0e6DrcHuhEXeuMrAnXeC9Fyc/X5n+f0P0vHQPG5dfv
// SIG // XfbKZR1l9av9ODtJ6KyKwQ9T6i8Tj7+4l8Vtff6fUfA8
// SIG // 3TglJbT9I7h4cX/eNIFOMBlbzdk7+pspyMYwD8Qt/I6S
// SIG // Db45G2/je4cKvRDA+sL0SLdu6EfmXUySjZBmpc8YBqgT
// SIG // Y/v+kQGNBMSbrDO1F7/zpuBBaFBUZidRzgqkDxKk8tcv
// SIG // qg/OiqrkO9+PcDaim/7cSkFXi+M7F6x5vND+oqbcEWtB
// SIG // /XmiJHIYVfRMrqbhvwi3GGuPMFFsst+3r8H1K3j6/KB+
// SIG // yD2BygPpnXY4+K8l2wkhyiZG7A==
// SIG // End signature block
