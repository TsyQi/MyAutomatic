/*---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/
"use strict";
// Typescript imports cannot find .Node native addons.
/* tslint:disable: no-require-imports no-var-requires */
var windowsRegistry = require("./build/Release/windows-registry");
/* tslint:enable: no-require-imports no-var-requires */
var Hive;
(function (Hive) {
    Hive[Hive["HKCU"] = 0] = "HKCU";
    Hive[Hive["HKLM"] = 1] = "HKLM";
})(Hive = exports.Hive || (exports.Hive = {}));
var Arch;
(function (Arch) {
    Arch[Arch["Default"] = 0] = "Default";
    Arch[Arch["Force32"] = 1] = "Force32";
    Arch[Arch["Force64"] = 2] = "Force64";
})(Arch = exports.Arch || (exports.Arch = {}));
var Registry = (function () {
    function Registry(hive, key, arch) {
        this._hive = hive;
        this._key = Registry._prepareKey(key);
        if (arch) {
            this._arch = arch;
        }
        else {
            this._arch = Arch.Default;
        }
    }
    Registry.prototype.get = function (name) {
        return windowsRegistry.getValue(this._hive, this._key, this._arch, name);
    };
    Registry.prototype.getValues = function () {
        return windowsRegistry.getValues(this._hive, this._key, this._arch);
    };
    Registry.prototype.set = function (name, value) {
        return windowsRegistry.setValue(this._hive, this._key, this._arch, name, value);
    };
    Registry.prototype.remove = function (name) {
        return windowsRegistry.deleteValue(this._hive, this._key, this._arch, name);
    };
    // Strips forward slash from a key path
    Registry._prepareKey = function (key) {
        if (key != null && key.indexOf("\\") === 0) {
            return key.substr(1);
        }
        return key;
    };
    return Registry;
}());
exports.Registry = Registry;
