#pragma once
#define WIN32_LEAN_AND_MEAN
#include <windows.h>
#include <nan.h>
#include <atlstr.h>

#define MAX_REGKEY_LENGTH 256

struct RegInfo {
    HKEY hive;
    WCHAR key[MAX_REGKEY_LENGTH];
    WCHAR name[MAX_REGKEY_LENGTH];
    DWORD accessModifier;
};

HRESULT getString(v8::Value* val, WCHAR* buffer, int bufferlen);
HRESULT getNanString(WCHAR* value, char* buffer, int bufferlen);
HRESULT parseRegInfoWithName(const Nan::FunctionCallbackInfo<v8::Value>& info, RegInfo* regInfo);
HRESULT parseRegInfo(const Nan::FunctionCallbackInfo<v8::Value>& info, RegInfo* regInfo);
HRESULT GetValueFromRegistryAsV8Local(HKEY regHandle, WCHAR* name, v8::Local<v8::Value>* value);
void throwErrorMessage(char* message, DWORD errorCode);
void throwErrorMessage(char* message);