/*!---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/
"use strict";
var ResultsImpl = (function () {
    function ResultsImpl() {
        this.resolved = [];
        this.results = [];
        this.failReasons = [];
    }
    return ResultsImpl;
}());
function tryAll(input) {
    if (input.length === 0) {
        return Promise.resolve(new ResultsImpl());
    }
    var internalInstance = new ResultsImpl();
    var promisesInProgress = [];
    var _loop_1 = function(i) {
        if (input[i] && input[i].then) {
            promisesInProgress.push(input[i].then(function (value) {
                internalInstance.results[i] = value;
                internalInstance.resolved[i] = true;
                return value;
            }, function (reason) {
                internalInstance.resolved[i] = false;
                internalInstance.failReasons[i] = reason;
            }));
        }
        else {
            internalInstance.resolved[i] = false;
            internalInstance.failReasons[i] = "Invalid Promise: " + JSON.stringify(input[i]);
        }
    };
    for (var i = 0; i < input.length; i++) {
        _loop_1(i);
    }
    var internalPromise = Promise.all(promisesInProgress)
        .then(function () {
        return internalInstance;
    }, function (reason) {
        return Promise.reject(reason);
    });
    return internalPromise;
}
exports.tryAll = tryAll;
