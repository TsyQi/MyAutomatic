"use strict";
var index_1 = require("../index");
function setProductFeatureEntityName(eventName, reservedProperties) {
    var separator = "/";
    var whitespace = " ";
    var separatorCount = 0;
    if (eventName == null || eventName.length === 0) {
        throw new Error("Event name shouldn't be null or empty.");
    }
    // verify event name doesn't start or end with separator
    if (eventName[0] === separator
        || eventName[eventName.length - 1] === separator) {
        throw new Error("Event name shouldn't start or end with slash.");
    }
    // verify no space or successive slashes
    for (var i = 0; i < eventName.length; i++) {
        if (eventName[i] === whitespace) {
            throw new Error("Event name shouldn't have whitespaces.");
        }
        else if (eventName[i] === separator) {
            separatorCount++;
            if (i > 0 && eventName[i - 1] === separator) {
                throw new Error("Event name shouldn't have successive slashes.");
            }
        }
    }
    if (separatorCount < 2) {
        throw new Error("Event name should have at least 3 parts separated by slash.");
    }
    // Because event name is converted to lower case later in method postValidatedEvent
    // which happened before calling this method, 
    // we need to convert it right now to be consistent with .NET API behavior.
    eventName = eventName.toLowerCase();
    var firstPosition = eventName.indexOf(separator);
    var lastPosition = eventName.lastIndexOf(separator);
    reservedProperties[index_1.Event.dataModelPropertyPrefix + "ProductName"]
        = eventName.substring(0, firstPosition);
    reservedProperties[index_1.Event.dataModelPropertyPrefix + "FeatureName"]
        = eventName.substring(firstPosition + 1, lastPosition);
    reservedProperties[index_1.Event.dataModelPropertyPrefix + "EntityName"]
        = eventName.substring(lastPosition + 1);
}
exports.setProductFeatureEntityName = setProductFeatureEntityName;
