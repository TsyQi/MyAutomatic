/*---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/
"use strict";
var os = require("os");
var fsp = require("node-fs-promise");
var DeveloperModeValidator = (function () {
    function DeveloperModeValidator(homeDir) {
        if (homeDir === undefined) {
            homeDir = os.homedir();
        }
        this._waitSettings = fsp
            .readFile(homeDir + "/VSTelemetry/channels.json")
            .then(function (data) {
            var settings = {};
            try {
                settings = JSON.parse(data.toString());
            }
            catch (err) {
            }
            return settings;
        }, function (err) { return {}; });
    }
    /**
     * Validate channel. Change channels properties (setEnabled).
     * Return Promise when validation is completed.
     * Logic is the following:
     *   1. if settings contains key <channel-id> and its value "disabled" channel is disabled. Exit.
     *   2. if settings contains key <channel-id> and its value "enabled" channel is enabled. Exit.
     * @param channel channel to validate
     * @return Promise on completion
     */
    DeveloperModeValidator.prototype.validate = function (channel) {
        return this._waitSettings
            .then(function (settings) {
            if (settings.hasOwnProperty(channel.id())) {
                if (settings[channel.id()] === "disabled") {
                    channel.setEnabled(false);
                }
                else if (settings[channel.id()] === "enabled") {
                    channel.setEnabled(true);
                }
            }
            return null;
        });
    };
    return DeveloperModeValidator;
}());
exports.DeveloperModeValidator = DeveloperModeValidator;
