/*---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/
"use strict";
var service_session_initializer_1 = require("../service-session-initializer");
var BaseChannel = (function () {
    function BaseChannel() {
        this._enabled = true;
        this._disposed = false;
        this._properties = service_session_initializer_1.ChannelProperties.None;
        this._started = false;
    }
    BaseChannel.prototype.properties = function () {
        return this._properties;
    };
    BaseChannel.prototype.setProperties = function (properties) {
        this._properties = properties;
    };
    BaseChannel.prototype.enabled = function () {
        return this._enabled;
    };
    BaseChannel.prototype.setEnabled = function (st) {
        this._enabled = st;
    };
    BaseChannel.prototype.isStarted = function () {
        return this._started;
    };
    BaseChannel.prototype.postEvent = function (event) {
        if (!this._disposed && this.enabled()) {
            this._postEvent(event);
        }
    };
    BaseChannel.prototype.dispose = function () {
        if (!this._disposed) {
            this._disposed = true;
            this._disposePromise = Promise.resolve(this._dispose());
        }
        return this._disposePromise;
    };
    BaseChannel.prototype._ensureChannelIsStarted = function () {
        if (!this.isStarted()) {
            throw new Error("channel.start must be called before this method");
        }
    };
    return BaseChannel;
}());
exports.BaseChannel = BaseChannel;
