/*---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/
"use strict";
var native_windows_registry_1 = require("native-windows-registry");
var native_windows_registry_2 = require("native-windows-registry");
exports.Arch = native_windows_registry_2.Arch;
var NativeRegistryTools = (function () {
    function NativeRegistryTools(arch) {
        this._archFlag = native_windows_registry_1.Arch.Default;
        if (arch != null) {
            this._archFlag = arch;
        }
    }
    /**
     * Gets a string from the HKCU hive in the registry.
     * @param key key in the registry
     * @param name name of the registry string
     * @return string string in registry
     */
    /* istanbul ignore next */
    NativeRegistryTools.prototype.getStringFromHKCU = function (key, name) {
        return this._registryGet(native_windows_registry_1.Hive.HKCU, key, name);
    };
    /**
     * Gets a string from the HKLM hive in the registry.
     * @param key key in the registry
     * @param name name of the registry string
     * @return string string in registry
     */
    /* istanbul ignore next */
    NativeRegistryTools.prototype.getStringFromHKLM = function (key, name) {
        return this._registryGet(native_windows_registry_1.Hive.HKLM, key, name);
    };
    /**
     * Gets a number from the HKCU hive in the registry.
     * @param key key in the registry
     * @param name name of the registry string
     * @return number in registry
     */
    NativeRegistryTools.prototype.getNumberFromHKCU = function (key, name) {
        return this._getNumberFromHive(native_windows_registry_1.Hive.HKCU, key, name);
    };
    /**
     * Gets a number from the HKLM hive in the registry.
     * @param key key in the registry
     * @param name name of the registry string
     * @return number number in registry
     */
    NativeRegistryTools.prototype.getNumberFromHKLM = function (key, name) {
        return this._getNumberFromHive(native_windows_registry_1.Hive.HKLM, key, name);
    };
    /**
     * Sets a string in the HKCU hive in the registry.
     * @param key key in the registry
     * @param name name of the registry string to setEnabled
     * @param value value of the item to set
     */
    /* istanbul ignore next */
    NativeRegistryTools.prototype.setStringInHKCU = function (key, name, value) {
        this._registrySet(native_windows_registry_1.Hive.HKCU, key, name, value);
    };
    /**
     * Sets a string in the HKLM hive in the registry.
     * @param key key in the registry
     * @param name name of the registry string to setEnabled
     * @param value value of the item to set
     */
    /* istanbul ignore next */
    NativeRegistryTools.prototype.setStringInHKLM = function (key, name, value) {
        this._registrySet(native_windows_registry_1.Hive.HKLM, key, name, value);
    };
    /**
     * Removes the specified value from the HKCU hive in the registry.
     * @param key key in the registry
     * @param name name of the value to remove
     */
    /* istanbul ignore next */
    NativeRegistryTools.prototype.removeValueFromHKCU = function (key, name) {
        this._registryRemove(native_windows_registry_1.Hive.HKCU, key, name);
    };
    /**
     * Removes the specified value from the HKCU hive in the registry.
     * @param key key in the registry
     * @param name name of the value to remove
     */
    /* istanbul ignore next */
    NativeRegistryTools.prototype.removeValueFromHKLM = function (key, name) {
        this._registryRemove(native_windows_registry_1.Hive.HKLM, key, name);
    };
    /**
     * Gets a map of key value pairs from the HKCU hive in the registry.
     * @param key key under which all value will be retrieved with the map
     * @return map of registry values and their data
     */
    /* istanbul ignore next */
    NativeRegistryTools.prototype.getValuesFromHKCU = function (key) {
        return this._registryGetValues(native_windows_registry_1.Hive.HKCU, key);
    };
    /**
     * Gets a map of key value pairs from the HKLM hive in the registry.
     * @param key key under which all value will be retrieved with the map
     * @return map of registry values and their data
     */
    /* istanbul ignore next */
    NativeRegistryTools.prototype.getValuesFromHKLM = function (key) {
        return this._registryGetValues(native_windows_registry_1.Hive.HKLM, key);
    };
    /**
     * Gets a number from the specified hive in the registry.
     * @param hive registry hive
     * @param key key in the registry
     * @param name name of the registry string
     * @return number number from the registry
     */
    NativeRegistryTools.prototype._getNumberFromHive = function (hive, key, name) {
        var stringValue = this._registryGet(hive, key, name);
        var convertedNumber = Number(stringValue);
        if (!convertedNumber) {
            throw new Error("registry value does not convert to number");
        }
        return convertedNumber;
    };
    /* istanbul ignore next */
    NativeRegistryTools.prototype._registryGet = function (hive, key, name) {
        return this._registryGetFromLibrary(hive, key, name).toString();
    };
    /* istanbul ignore next */
    NativeRegistryTools.prototype._registryGetFromLibrary = function (hive, key, name) {
        return new native_windows_registry_1.Registry(hive, key, this._archFlag).get(name);
    };
    /* istanbul ignore next */
    NativeRegistryTools.prototype._registrySet = function (hive, key, name, value) {
        new native_windows_registry_1.Registry(hive, key, this._archFlag).set(name, value);
    };
    /* istanbul ignore next */
    NativeRegistryTools.prototype._registryRemove = function (hive, key, name) {
        new native_windows_registry_1.Registry(native_windows_registry_1.Hive.HKCU, key, this._archFlag).remove(name);
    };
    /* istanbul ignore next */
    NativeRegistryTools.prototype._registryGetValues = function (hive, key) {
        var values = this._registryGetValuesFromLibrary(hive, key);
        var returnMap = {};
        Object.keys(values).forEach(function (objectKey) {
            // Force to be strings in case we have different types.
            returnMap[objectKey] = values[objectKey].toString();
        });
        return returnMap;
    };
    /* istanbul ignore next */
    NativeRegistryTools.prototype._registryGetValuesFromLibrary = function (hive, key) {
        return new native_windows_registry_1.Registry(native_windows_registry_1.Hive.HKCU, key, this._archFlag).getValues();
    };
    return NativeRegistryTools;
}());
exports.NativeRegistryTools = NativeRegistryTools;
