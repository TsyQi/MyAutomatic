/*---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/
"use strict";
var vs_telemetry_api_1 = require("vs-telemetry-api");
var action_1 = require("../actions/action");
var index_1 = require("../../index");
var telemetry_manifest_1 = require("./telemetry-manifest");
var stringjs = require("string");
var ManifestActionPii = (function () {
    function ManifestActionPii() {
        this.priority = action_1.ActionPriority.ManifestPiiPriority;
        this._properties = [];
    }
    Object.defineProperty(ManifestActionPii.prototype, "properties", {
        get: function () {
            return this._properties;
        },
        set: function (value) {
            if (value == null) {
                throw new index_1.ArgumentException("properties cannot be null");
            }
            this._properties = value.map(function (property) { return property.toLowerCase(); });
        },
        enumerable: true,
        configurable: true
    });
    ManifestActionPii.prototype.run = function (context) {
        var event = context.event;
        this.properties.forEach(function (propertyName) {
            for (var key in event.properties) {
                if (event.properties.hasOwnProperty(key) && key.toLowerCase() === propertyName) {
                    var propertyValue = event.properties[key];
                    if (!(propertyValue instanceof vs_telemetry_api_1.PiiProperty)) {
                        event.properties[key] = new vs_telemetry_api_1.PiiProperty(propertyValue);
                    }
                }
            }
        });
        return Promise.resolve(null);
    };
    ManifestActionPii.prototype.validate = function () {
        if (this.properties.length === 0) {
            throw new telemetry_manifest_1.TelemetryManifestValidationException("properties must have at least one property");
        }
        if (this.properties.some(function (propertyName) { return stringjs(propertyName).isEmpty(); })) {
            throw new telemetry_manifest_1.TelemetryManifestValidationException("properties must not contain empty/null property name");
        }
    };
    return ManifestActionPii;
}());
exports.ManifestActionPii = ManifestActionPii;
