/*---------------------------------------------------------
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *--------------------------------------------------------*/
"use strict";
var stringjs = require("string");
var action_1 = require("../actions/action");
var telemetry_manifest_1 = require("./telemetry-manifest");
var index_1 = require("../../index");
/**
 * If you change this type, do not forget to make appropriate changes in the telemetry-manifest-parser.ts
 */
var ManifestActionRoute = (function () {
    function ManifestActionRoute() {
        this._channels = [];
        this.priority = action_1.ActionPriority.ManifestRoutePriority;
    }
    Object.defineProperty(ManifestActionRoute.prototype, "channels", {
        get: function () {
            return this._channels;
        },
        set: function (value) {
            if (value == null) {
                throw new index_1.ArgumentException("channels cannot be null");
            }
            this._channels = value;
        },
        enumerable: true,
        configurable: true
    });
    ManifestActionRoute.prototype.validate = function () {
        if (this.channels.length === 0) {
            throw new telemetry_manifest_1.TelemetryManifestValidationException("channels must have at least one channel");
        }
        this.channels.forEach(function (channelId) {
            if (stringjs(channelId).isEmpty()) {
                throw new telemetry_manifest_1.TelemetryManifestValidationException("channels must not contain empty/null channels");
            }
        });
    };
    ManifestActionRoute.prototype.run = function (context) {
        context.routeTo(this.channels);
        return Promise.resolve(null);
    };
    return ManifestActionRoute;
}());
exports.ManifestActionRoute = ManifestActionRoute;
